"use strict";(self.webpackJsonp=self.webpackJsonp||[]).push([[9011],{"9011":function(A){A.exports=JSON.parse('{"version":3,"sources":["src/components/slider/slider.tsx"],"names":["Slider","this","handleTouchStart","e","_this","touching","disabled","touchId","targetTouches","identifier","totalWidth","sliderInsRef","clientWidth","ogX","pageX","ogPercent","percent","handleTouchMove","_a","max","min","preventDefault","diffX","handleValueUpdate","val","updateByStep","onChanging","emit","detail","value","handleTouchEnd","onChange","isNaN","Math","prototype","function","isWillLoadCalled","componentDidLoad","handler","addEventListener","componentWillLoad","step","steps","floor","i","current","next","render","showValue","backgroundColor","activeColor","blockColor","name","blockSize","innerStyles","percentage","trackStyles","width","concat","handlerStyles","left","height","marginTop","marginLeft","h","Host","class","style","ref","c","dom","type"],"mappings":"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","sourcesContent":["import { Component, h, ComponentInterface, Prop, Event, EventEmitter, State, Watch, Host, Element } from \'@stencil/core\'\\n\\n@Component({\\n  tag: \'taro-slider-core\'\\n})\\nexport class Slider implements ComponentInterface {\\n  private sliderInsRef: HTMLDivElement\\n  private handler: HTMLDivElement\\n\\n  @Element() el: HTMLElement\\n\\n  @Prop() min = 0\\n  @Prop() max = 100\\n  @Prop() step = 1\\n  @Prop() disabled = false\\n  @Prop({ mutable: true, reflect: true }) value: number = 0\\n  @Prop() activeColor = \'#1aad19\'\\n  @Prop() backgroundColor = \'#e9e9e9\'\\n  @Prop() blockSize = 28\\n  @Prop() blockColor = \'#ffffff\'\\n  @Prop() showValue = false\\n  @Prop() name = \'\'\\n\\n  @State() totalWidth = 1\\n  @State() touching = false\\n  @State() ogX = 0\\n  @State() touchId: number | null = null\\n  @State() percent = 0\\n  @State() ogPercent: number\\n  @State() isWillLoadCalled = false\\n\\n  @Watch(\'value\')\\n  function (value) {\\n    if (!this.isWillLoadCalled) return\\n    const { max, min } = this\\n    if (value !== null) {\\n      const val = this.handleValueUpdate(value, min, max)\\n      this.updateByStep(val)\\n    }\\n  }\\n\\n  componentDidLoad () {\\n    // 在自动化测试时，如果通过 JSX 绑定 touch 事件，\\n    // 模拟的 touch 事件只会在浏览器的 device mode 下触发，Karma 跑的测试就会跪。\\n    // 因此改为 didLoad 后 addEventListener 的形式。\\n    this.handler.addEventListener(\'touchstart\', this.handleTouchStart)\\n    this.handler.addEventListener(\'touchmove\', this.handleTouchMove)\\n    this.handler.addEventListener(\'touchend\', this.handleTouchEnd)\\n  }\\n\\n  @Event({\\n    eventName: \'change\'\\n  })\\n  onChange: EventEmitter\\n\\n  @Event({\\n    eventName: \'changing\'\\n  })\\n  onChanging: EventEmitter\\n\\n  componentWillLoad () {\\n    this.isWillLoadCalled = true\\n    const { value, max, min } = this\\n\\n    const val = this.handleValueUpdate(value, min, max)\\n    this.updateByStep(val)\\n  }\\n\\n  handleTouchStart = (e: TouchEvent) => {\\n    if (this.touching || this.disabled) return\\n\\n    this.touching = true\\n    this.touchId = e.targetTouches[0].identifier\\n    this.totalWidth = this.sliderInsRef.clientWidth || 1\\n    this.ogX = e.targetTouches[0].pageX\\n    this.ogPercent = this.percent\\n  }\\n\\n  handleTouchMove = (e: TouchEvent) => {\\n    const {\\n      disabled,\\n      touching,\\n      touchId,\\n      totalWidth,\\n      max,\\n      min,\\n      ogX,\\n      ogPercent\\n    } = this\\n    if (!touching || disabled) return\\n    if (e.targetTouches[0].identifier !== touchId) return\\n\\n    // 阻止默认事件\\n    e.preventDefault()\\n\\n    const pageX = e.targetTouches[0].pageX\\n    const diffX = pageX - ogX\\n\\n    let percent = diffX / totalWidth * 100 + ogPercent\\n    percent = this.handleValueUpdate(percent, 0, 100)\\n    const val = min + percent * 0.01 * (max - min)\\n\\n    this.updateByStep(val)\\n\\n    this.onChanging.emit({\\n      detail: e.detail,\\n      value: this.value\\n    })\\n  }\\n\\n  handleTouchEnd = (e: TouchEvent) => {\\n    const { disabled, touching } = this\\n    if (!touching || disabled) return\\n\\n    if (this.percent !== this.ogPercent) {\\n      this.onChange.emit({\\n        detail: e.detail,\\n        value: this.value\\n      })\\n    }\\n\\n    this.touching = false\\n    this.touchId = null\\n    this.ogX = 0\\n    this.ogPercent = 0\\n  }\\n\\n  handleValueUpdate = (e: number, min = this.min, max = this.max) => {\\n    e = isNaN(e) ? 0 : e\\n    return Math.max(min, Math.min(e, max))\\n  }\\n\\n  // 根据步长 step 修改 value\\n  updateByStep (value: number) {\\n    const { max, min, step } = this\\n    const steps = Math.floor((max - min) / step)\\n    for (let i = 0; i <= steps; i++) {\\n      const current = min + step * i\\n      const next = i === steps ? null : min + step * (i + 1)\\n\\n      if (value === current) break\\n\\n      if (!next && value > current) {\\n        // step 不能被 max - min 整除\\n        value = current\\n      }\\n\\n      if (next && value > current && value < next) {\\n        if (value - current < step / 2) {\\n          value = current\\n        } else {\\n          value = next\\n        }\\n        break\\n      }\\n    }\\n\\n    const percent = (value - min) / (max - min) * 100\\n\\n    this.value = value\\n    this.percent = percent\\n  }\\n\\n  render () {\\n    const {\\n      showValue,\\n      backgroundColor,\\n      activeColor,\\n      blockColor,\\n      name,\\n      percent,\\n      value\\n    } = this\\n    let blockSize = this.blockSize\\n\\n    const innerStyles = { backgroundColor }\\n    const percentage = percent > 100 ? 100 : percent\\n    const trackStyles = {\\n      width: `${percentage}%`,\\n      backgroundColor: activeColor\\n    }\\n\\n    if (blockSize < 12) {\\n      blockSize = 12\\n    }\\n    if (blockSize > 28) {\\n      blockSize = 28\\n    }\\n\\n    const handlerStyles = {\\n      left: `${percentage}%`,\\n      width: `${blockSize}px`,\\n      height: `${blockSize}px`,\\n      backgroundColor: blockColor,\\n      marginTop: `-${Math.floor(blockSize / 2)}px`,\\n      marginLeft: `-${Math.floor(blockSize / 2)}px`\\n    }\\n    return (\\n      <Host class=\'weui-slider-box\'>\\n        <div class=\'weui-slider\'>\\n          <div class=\'weui-slider__inner\' style={innerStyles} ref={c => (this.sliderInsRef = c!)}>\\n            <div style={trackStyles} class=\'weui-slider__track\' />\\n            <div\\n              class=\'weui-slider__handler\'\\n              ref={dom => {\\n                if (dom) this.handler = dom\\n              }}\\n              style={handlerStyles}\\n            />\\n            <input type=\'hidden\' name={name} value={value} />\\n          </div>\\n        </div>\\n        {showValue && <div class=\'weui-slider-box__value\'>{value}</div>}\\n      </Host>\\n    )\\n  }\\n}\\n"]}')}}]);